name: Setup Stack
description: "Prepares the Go and Node.js/Yarn Stack."
inputs:
  directory:
    description: "The directory to run the setup in."
    required: true
    default: "."
  node-version:
    description: "The Node.js version to use."
    required: true
    default: "18.x"
  go-version:
    description: "The Go version to use."
    required: true
    default: "1.20"
  ghp-token:
    description: "The GitHub Packages Token."
    required: false
runs:
  using: "composite"
  steps:
    - name: Fix Node
      shell: bash
      run: "pip install setuptools"

    - name: Prepare NPM
      shell: bash
      run: 'echo "//npm.pkg.github.com/:_authToken=$GHP_TOKEN" >> ~/.npmrc'
      env:
        GHP_TOKEN: "${{ inputs.ghp-token }}"
      if: "${{ inputs.ghp-token }}"

    - name: Prepare SSH
      shell: bash
      run: 'printf "machine github.com\n\tlogin $GHP_TOKEN" >> ~/.netrc'
      env:
        GHP_TOKEN: "${{ inputs.ghp-token }}"
      if: "${{ inputs.ghp-token }}"

    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: "${{ inputs.node-version }}"
        cache: "yarn"
        cache-dependency-path: "${{ inputs.directory }}/yarn.lock"

    - name: Yarn Install
      shell: bash
      run: "yarn install --network-timeout 300000"
      working-directory: "${{ inputs.directory }}"

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: "${{ inputs.go-version }}"
        cache-dependency-path: "${{ inputs.directory }}/go.sum"

    - name: Go Install
      shell: bash
      run: go mod download
      working-directory: "${{ inputs.directory }}"
